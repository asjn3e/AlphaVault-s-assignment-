{"ast":null,"code":"export class circleBase {\n  constructor(canvas) {\n    let radiusFactor = 4;\n    if (canvas.width < 540) {\n      radiusFactor = 3;\n    }\n    this.x = Math.random() * canvas.width;\n    this.y = Math.random() * canvas.height;\n    this.radius = Math.random() * radiusFactor + 0.2;\n    this.speedX = Math.random() * 3 - 1.5;\n    this.speedY = Math.random() * 3 - 1.5;\n    this.speedR = 0.05;\n    this.colors = [\"#ff0084\", \"#843ea1\", \"#00e1d9\"];\n    this.color = this.colors[Math.floor(Math.random() * this.colors.length)];\n  }\n  update(canvas) {\n    if (this.y - this.radius < 0) {\n      this.speedY *= -1;\n    }\n    if (this.y + this.radius > canvas.height) {\n      this.speedY *= -1;\n    }\n    if (this.x - this.radius < 0) {\n      this.speedX *= -1;\n    }\n    this.canvas = canvas;\n    if (this.x + this.radius > canvas.width) {\n      this.speedX *= -1;\n    }\n    if (canvas.width > 539) {\n      if (this.radius >= 4.2) {\n        this.speedR *= -1;\n      }\n      if (this.radius <= 0.2) {\n        this.speedR *= -1;\n      }\n    } else {\n      if (this.radius >= 3.2) {\n        this.speedR *= -1;\n      }\n      if (this.radius <= 0.2) {\n        this.speedR *= -1;\n      }\n    }\n    this.x += this.speedX;\n    this.y += this.speedY;\n    this.radius += this.speedR;\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.fillStyle = this.color;\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\nexport function init(canvas) {\n  let circles = [];\n  for (let i = 0; i < 50; i++) {\n    circles.push(new circleBase(canvas));\n  }\n  return circles;\n}\nexport function handleCircles(circles, ctx, canvas) {\n  // console.log(circles)\n}\n// handleCircles();\n\nexport function animate(canvas, ctx, circles) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  circles.forEach(element => {\n    element.update(canvas);\n    element.draw(ctx);\n  });\n}","map":{"version":3,"names":["circleBase","constructor","canvas","radiusFactor","width","x","Math","random","y","height","radius","speedX","speedY","speedR","colors","color","floor","length","update","draw","ctx","beginPath","fillStyle","arc","PI","fill","init","circles","i","push","handleCircles","animate","clearRect","forEach","element"],"sources":["/home/asjn3e/Desktop/AlphaVault-s-assignment-/Front-End/src/canvasUtlis.js"],"sourcesContent":["export class circleBase {\n  constructor(canvas) {\n    let radiusFactor = 4;\n    if (canvas.width < 540) {\n      radiusFactor = 3;\n    }\n\n    this.x = Math.random() * canvas.width;\n    this.y = Math.random() * canvas.height;\n    this.radius = Math.random() * radiusFactor + 0.2;\n    this.speedX = Math.random() * 3 - 1.5;\n    this.speedY = Math.random() * 3 - 1.5;\n    this.speedR = 0.05;\n    this.colors = [\"#ff0084\", \"#843ea1\", \"#00e1d9\"];\n    this.color = this.colors[Math.floor(Math.random() * this.colors.length)];\n  }\n  update(canvas) {\n    if (this.y - this.radius < 0) {\n      this.speedY *= -1;\n    }\n    if (this.y + this.radius > canvas.height) {\n      this.speedY *= -1;\n    }\n    if (this.x - this.radius < 0) {\n      this.speedX *= -1;\n    }\n    this.canvas = canvas;\n    if (this.x + this.radius > canvas.width) {\n      this.speedX *= -1;\n    }\n\n    if (canvas.width > 539) {\n      if (this.radius >= 4.2) {\n        this.speedR *= -1;\n      }\n      if (this.radius <= 0.2) {\n        this.speedR *= -1;\n      }\n    } else {\n      if (this.radius >= 3.2) {\n        this.speedR *= -1;\n      }\n      if (this.radius <= 0.2) {\n        this.speedR *= -1;\n      }\n    }\n    this.x += this.speedX;\n    this.y += this.speedY;\n    this.radius += this.speedR;\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.fillStyle = this.color;\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fill();\n  }\n}\n\nexport function init(canvas) {\n  let circles = [];\n  for (let i = 0; i < 50; i++) {\n    circles.push(new circleBase(canvas));\n  }\n  return circles;\n}\n\nexport function handleCircles(circles, ctx, canvas) {\n  // console.log(circles)\n}\n// handleCircles();\n\nexport function animate(canvas, ctx, circles) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  circles.forEach((element) => {\n    element.update(canvas);\n    element.draw(ctx);\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}