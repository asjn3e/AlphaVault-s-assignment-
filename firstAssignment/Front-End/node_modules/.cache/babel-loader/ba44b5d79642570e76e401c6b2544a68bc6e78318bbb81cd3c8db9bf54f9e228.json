{"ast":null,"code":"var _jsxFileName = \"/home/asjn3e/Desktop/AlphaVault-s-assignment-/Front-End/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./style/style.scss\";\nimport Header from \"./compoenents/Header\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { init } from \"./canvasUtlis\";\nimport WalletInfo from \"./compoenents/WalletInfo\";\nimport Tokens from \"./compoenents/Tokens\";\nimport ChainSelector from \"./compoenents/ChainSelector\";\nimport { requestAccounts } from \"./metamask\";\nimport Web3 from \"web3\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // app's states \n  const [isSelectorActive, setIsselctorActive] = useState(false);\n  const [chain, setChain] = useState(\"eth\");\n  const [isConnected, setIsConnected] = useState(false);\n  const [walletAddress, setwalletAddress] = useState(\"0x00...0000\");\n  const [tokens, setTokens] = useState([]);\n  const [taotalBalance, setTotalBalance] = useState(0);\n  const [web3, setWeb3] = useState(new Web3(window.ethereum));\n\n  // app's refrences \n  const canvasRef = useRef(null);\n\n  //use effect for running canvas animation\n  useEffect(() => {\n    let ctx = canvasRef.current.getContext(\"2d\"); //geting canvas api\n\n    canvasRef.current.height = document.querySelector(\"body\").clientHeight; //setting canvas height\n    canvasRef.current.width = document.querySelector(\"body\").clientWidth; //setting canvas width\n    let circles = init(canvasRef.current); //canvas objects\n    //animating function\n    function animate() {\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      circles.forEach(element => {\n        element.update(canvasRef.current);\n        element.draw(ctx);\n      });\n      requestAnimationFrame(animate);\n    }\n    animate();\n  }, []);\n\n  //event for connecton to meta mask and getting the wallet address\n  const handleConnection = async () => {\n    if (isConnected) {\n      setIsConnected(false);\n      setwalletAddress(\"0x0..0000\");\n    } else {\n      await requestAccounts();\n      const account = await web3.eth.getAccounts(); //getting the walllet address\n      if (account) {\n        setIsConnected(true);\n        setwalletAddress(account);\n        try {\n          const Tokens = await axios.get(`http://localhost:5000/wallet/${account}/${chain}`);\n          setTokens(Tokens.data);\n\n          //calculating the total balnce\n\n          let totalBalance = 0;\n          Tokens.data.forEach(token => {\n            totalBalance += Number(token.balanceIntoUSD);\n          });\n          setTotalBalance(totalBalance);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    }\n  };\n\n  // event for requesting wallet info when user changed chain\n  const handleChainChange = async chain => {\n    if (isConnected) {\n      await requestAccounts();\n      const account = await web3.eth.getAccounts(); //getting the walllet address\n      if (account) {\n        setIsConnected(true);\n        setwalletAddress(account);\n        try {\n          const Tokens = await axios.get(`http://localhost:5000/wallet/${account}/${chain}`);\n          setTokens(Tokens.data);\n\n          //calculating the total balance\n          let totalBalance = 0;\n          Tokens.data.forEach(token => {\n            totalBalance += Number(token.balanceIntoUSD);\n          });\n          setTotalBalance(totalBalance);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    }\n  };\n\n  //rendering part\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"canvas\",\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      connectionHandler: handleConnection,\n      isConnected: isConnected,\n      chain: chain,\n      setIsselctorActive: setIsselctorActive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WalletInfo, {\n      chain: chain,\n      tokens: tokens,\n      walletAddress: walletAddress,\n      taotalBalance: taotalBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tokens, {\n      tokens: tokens\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), isSelectorActive ? /*#__PURE__*/_jsxDEV(ChainSelector, {\n      setChain: setChain,\n      setIsselctorActive: setIsselctorActive,\n      handleChainChange: handleChainChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+GJGwvPQFKIfoLUQcJALN32k8h4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","useRef","useEffect","useState","init","WalletInfo","Tokens","ChainSelector","requestAccounts","Web3","axios","jsxDEV","_jsxDEV","App","_s","isSelectorActive","setIsselctorActive","chain","setChain","isConnected","setIsConnected","walletAddress","setwalletAddress","tokens","setTokens","taotalBalance","setTotalBalance","web3","setWeb3","window","ethereum","canvasRef","ctx","current","getContext","height","document","querySelector","clientHeight","width","clientWidth","circles","animate","clearRect","forEach","element","update","draw","requestAnimationFrame","handleConnection","account","eth","getAccounts","get","data","totalBalance","token","Number","balanceIntoUSD","e","console","log","handleChainChange","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","connectionHandler","_c","$RefreshReg$"],"sources":["/home/asjn3e/Desktop/AlphaVault-s-assignment-/Front-End/src/App.js"],"sourcesContent":["import \"./style/style.scss\";\nimport Header from \"./compoenents/Header\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { init } from \"./canvasUtlis\";\nimport WalletInfo from \"./compoenents/WalletInfo\";\nimport Tokens from \"./compoenents/Tokens\";\nimport ChainSelector from \"./compoenents/ChainSelector\";\nimport { requestAccounts } from \"./metamask\";\nimport Web3 from \"web3\";\nimport axios from \"axios\";\n\nfunction App() {\n  // app's states \n  const [isSelectorActive, setIsselctorActive] = useState(false);\n  const [chain, setChain] = useState(\"eth\");\n  const [isConnected, setIsConnected] = useState(false);\n  const [walletAddress, setwalletAddress] = useState(\"0x00...0000\");\n  const [tokens, setTokens] = useState([]);\n  const [taotalBalance, setTotalBalance] = useState(0);\n  const [web3, setWeb3] = useState(new Web3(window.ethereum));\n\n  // app's refrences \n  const canvasRef = useRef(null);\n\n  \n  //use effect for running canvas animation\n  useEffect(() => {\n    let ctx = canvasRef.current.getContext(\"2d\"); //geting canvas api\n\n    canvasRef.current.height = document.querySelector(\"body\").clientHeight; //setting canvas height\n    canvasRef.current.width = document.querySelector(\"body\").clientWidth; //setting canvas width\n    let circles = init(canvasRef.current); //canvas objects\n    //animating function\n    function animate() {\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      circles.forEach((element) => {\n        element.update(canvasRef.current);\n        element.draw(ctx);\n      });\n      requestAnimationFrame(animate);\n    }\n    animate();\n  }, []);\n\n\n  //event for connecton to meta mask and getting the wallet address\n  const handleConnection = async () => {\n    if (isConnected) {\n      setIsConnected(false);\n      setwalletAddress(\"0x0..0000\");\n    } else {\n      await requestAccounts();\n      const account = await web3.eth.getAccounts(); //getting the walllet address\n      if (account) {\n        setIsConnected(true);\n        setwalletAddress(account);\n        try {\n          const Tokens = await axios.get(\n            `http://localhost:5000/wallet/${account}/${chain}`\n          );\n          setTokens(Tokens.data);\n\n          //calculating the total balnce\n\n          let totalBalance = 0;\n          Tokens.data.forEach((token) => {\n            totalBalance += Number(token.balanceIntoUSD);\n          });\n\n          setTotalBalance(totalBalance);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    }\n  };\n\n  // event for requesting wallet info when user changed chain\n  const handleChainChange = async (chain) => {\n    if (isConnected) {\n      await requestAccounts();\n      const account = await web3.eth.getAccounts(); //getting the walllet address\n      if (account) {\n        setIsConnected(true);\n        setwalletAddress(account);\n        try {\n          const Tokens = await axios.get(\n            `http://localhost:5000/wallet/${account}/${chain}`\n          );\n          setTokens(Tokens.data);\n\n          //calculating the total balance\n          let totalBalance = 0;\n          Tokens.data.forEach((token) => {\n            totalBalance += Number(token.balanceIntoUSD);\n          });\n\n          setTotalBalance(totalBalance);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    }\n  };\n\n  //rendering part\n  return (\n    <div className=\"Container\">\n      {/* canvas animation */}\n      <canvas className=\"canvas\" ref={canvasRef}></canvas>\n      {/* header */}\n      <Header\n        connectionHandler={handleConnection}\n        isConnected={isConnected}\n        chain={chain}\n        setIsselctorActive={setIsselctorActive}\n      ></Header>\n      {/* wallet information */}\n      <WalletInfo\n        chain={chain}\n        tokens={tokens}\n        walletAddress={walletAddress}\n        taotalBalance={taotalBalance}\n      />\n      {/* tokens */}\n      <Tokens tokens={tokens}></Tokens>\n      {/* chain selector */}\n      {isSelectorActive ? (\n        <ChainSelector\n          setChain={setChain}\n          setIsselctorActive={setIsselctorActive}\n          handleChainChange={handleChainChange}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}